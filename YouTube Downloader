from pytube import *
from tkinter.filedialog import *
from tkinter import *
from PIL import ImageTk, Image
from tkinter.messagebox import *
from threading import *

file_size = 0


def progressCheck(stream=None, chunk=None, file_handle=None, remaining=0):
    file_downloaded = (file_size - remaining)
    per = (file_downloaded/file_size)*100
    dbutton.config(text="{:00.0f} % is downloaded".format(per))


def downloadBox():

    global file_size
    global dbutton
    url = urlField.get()
    print(url)
    dbutton.config(text="Please wait...")
    dbutton.config(state=DISABLED)
    path_to_save_video = askdirectory()
    print(path_to_save_video)

    if path_to_save_video is None:
        return

    ob = YouTube(url, on_progress_callback=progressCheck)
    strm = ob.streams.first()

    print(strm)
    file_size = strm.filesize
    print(file_size)
    print(strm.title)
    print(ob.description)
    strm.download(path_to_save_video)
    print("Done...")
    dbutton.config(text="Start Downloading")
    dbutton.config(state=NORMAL)
    showinfo("Download Finished", "Downloaded Successfully")
    urlField.delete(0, END)


def startDownloadThread():
    thread = Thread(target=downloadBox)
    thread.start()


def exit1():
    exit()


def abt():
    showinfo("About", "This is a YouTube Downloader GUI using Python3.")


main = Tk()
main.title("Youtube Downloader")
main.iconbitmap("icon.ico")
main.geometry("500x600")

file = Image.open("youtube.png")
file = file.resize((150, 150), Image.ANTIALIAS)
img = ImageTk.PhotoImage(file)
headingIcon = Label(main, image=img).pack(side=TOP)

urlField = Entry(main, font=("verdana", 18), justify=CENTER)
urlField.pack(side=TOP, fill=X, padx=10)

dbutton = Button(main, text="Start Download", font=("verdana", 15), relief="ridge", command=startDownloadThread)
dbutton.pack(side=TOP, pady=10)

menu = Menu(main)
main.config(menu=menu)

subm1 = Menu(menu)
menu.add_cascade(label="File", menu=subm1)
subm1.add_command(label="Exit", command=exit1)

subm2 = Menu(menu)
menu.add_cascade(label="Options", menu=subm2)
subm2.add_command(label="About", command=abt)

mainloop()
